# Versão do Docker Compose
version: '3.8'

services:
  # Serviço do Backend (API Node.js)
  backend:
    build: ./backend
    # Carrega variáveis de ambiente do arquivo .env na raiz do projeto.
    # É aqui que o JWT_SECRET deve ser definido.
    env_file:
      - ./.env
    environment:
      # A porta em que o Node.js vai rodar DENTRO do contêiner.
      - PORT=8080
      # A URL para se conectar ao serviço de banco de dados 'db' nesta mesma rede.
      - DATABASE_URL=mongodb://db:27017/cchoras
    ports:
      # Mapeia a porta 3000 do seu computador para a porta 8080 do contêiner.
      - "3000:8080"
    volumes:
      # Sincroniza o código local com o contêiner para desenvolvimento ao vivo.
      - ./backend:/usr/src/app
      # Usa um volume para node_modules para evitar que o local sobrescreva o do contêiner.
      - /usr/src/app/node_modules
    command: npm start
    networks:
      - cchoras-net
    restart: unless-stopped
    depends_on:
      - db

  # Serviço do Frontend (Nginx + arquivos estáticos)
  frontend:
    build: ./frontend
    ports:
      # Mapeia a porta 8080 do seu computador para a porta 80 do contêiner.
      # Acesse a aplicação em http://localhost:8080
      - "8080:80"
    networks:
      - cchoras-net
    depends_on:
      - backend

  # Serviço do Banco de Dados MongoDB
  db:
    image: mongo:4.4
    volumes:
      # Persiste os dados do banco de dados em um volume nomeado.
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=examplepassword
    networks:
      - cchoras-net

# Define a rede compartilhada para os serviços se comunicarem.
networks:
  cchoras-net:
    driver: bridge

# Define o volume nomeado para persistência dos dados do MongoDB.
volumes:
  mongo-data: